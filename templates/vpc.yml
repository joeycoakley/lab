AWSTemplateFormatVersion: 2010-09-09
Description: |
  Base VPC

Parameters:
  pJoeyIp:
    Type: String
    Default: '{{resolve:secretsmanager:arn:aws:secretsmanager:us-east-2:082733122167:secret:VPN-cIU3XR:SecretString:JOEYHOMEIP}}'
    Description: Enter Joey Home Public IP - IP Only

  pJoeyHomePsk:
    Type: String
    Default: '{{resolve:secretsmanager:arn:aws:secretsmanager:us-east-2:082733122167:secret:VPN-cIU3XR:SecretString:JOEYHOMEPSK}}'
    Description: Pre-Shared Key used for the VPN connection

Resources:
  rVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: True
      EnableDnsSupport: True
      InstanceTenancy: default
      Tags:
        - Key: "Name"
          Value: !Sub '${AWS::StackName}-VPC'

  rPrivateSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region'
      CidrBlock: 10.0.1.0/25
      MapPublicIpOnLaunch: False
      Tags:
        - Key: "Name"
          Value: !Sub '${AWS::StackName}-PrivateSubnet-A'
      VpcId: !Ref rVPC

  rPrivateSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: 'AWS::Region'
      CidrBlock: 10.0.2.0/25
      MapPublicIpOnLaunch: False
      Tags:
        - Key: "Name"
          Value: !Sub '${AWS::StackName}-PrivateSubnet-B'
      VpcId: !Ref rVPC

  rPublicSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region'
      CidrBlock: 10.0.1.128/25
      MapPublicIpOnLaunch: True
      Tags:
        - Key: "Name"
          Value: !Sub '${AWS::StackName}-PublicSubnet-A'
      VpcId: !Ref rVPC

  rPublicSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: 'AWS::Region'
      CidrBlock: 10.0.2.128/25
      MapPublicIpOnLaunch: True
      Tags:
        - Key: "Name"
          Value: !Sub '${AWS::StackName}-PublicSubnet-B'
      VpcId: !Ref rVPC

  rIGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-IGW"

  rIGWAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref rIGW
      VpcId: !Ref rVPC

# NAT Gateway

  rNatGwEipA:
    Type: "AWS::EC2::EIP"
    DependsOn: rIGWAttach
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-NatGatewayEipA"

  rNatGwEipB:
    Type: "AWS::EC2::EIP"
    DependsOn: rIGWAttach
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-NatGatewayEipB"
  
  rNatGwA:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt rNatGwEipA.AllocationId
      SubnetId: !Ref rPublicSubnetA
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-NatGatewayA"

  rNatGwB:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt rNatGwEipB.AllocationId
      SubnetId: !Ref rPublicSubnetB
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-NatGatewayB"

# Routing A Side
  
  rPublicRTA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-PublicRT-A"
      VpcId: !Ref rVPC

  rPrivateRTA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-PublicRT-A"
      VpcId: !Ref rVPC
  
  rPublicRTADefaultRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref rIGW
      RouteTableId: !Ref rPublicRTA
    
  rPrivateRTADefaultRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref rNatGwA
      RouteTableId: !Ref rPrivateRTA

# Routing B Side

  rPublicRTB:
    Type: "AWS::EC2::RouteTable"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-PublicRT-B"
      VpcId: !Ref rVPC

  rPrivateRTB:
    Type: "AWS::EC2::RouteTable"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-PublicRT-B"
      VpcId: !Ref rVPC
  
  rPublicRTBDefaultRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref rIGW
      RouteTableId: !Ref rPublicRTB
    
  rPrivateRTBDefaultRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref rNatGwB
      RouteTableId: !Ref rPrivateRTB

  rCGWJoeyHome:
    Type: "AWS::EC2::CustomerGateway"
    Properties:
      BgpAsn: 65000
      IpAddress: !Ref pJoeyIp
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-JoeyHomeCGW"
      Type: ipsec.1
  
  rVpnGw:
    Type: "AWS::EC2::VPNGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-VGW"
      Type: ipsec.1

  rVpnRouteProp:
    Type: "AWS::EC2::VPNGatewayRoutePropagation"
    Properties:
      RouteTableIds: #required
        - !Ref rPublicRTB
        - !Ref rPublicRTA
        - !Ref rPrivateRTA
        - !Ref rPrivateRTB
      VpnGatewayId: !Ref rVpnGw
  

  rVpnGwAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref rVPC
      VpnGatewayId: !Ref rVpnGw
  
  rVpnConn:
    Type: "AWS::EC2::VPNConnection"
    Properties:
      CustomerGatewayId: !Ref rCGWJoeyHome
      StaticRoutesOnly: True
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-VPNConnection"
      Type: ipsec.1
      VpnGatewayId: !Ref rVpnGw
      VpnTunnelOptionsSpecifications:
        - PreSharedKey: !Ref pJoeyHomePsk

  rVpnRoute:
    Type: "AWS::EC2::VPNConnectionRoute"
    Properties:
      DestinationCidrBlock: 192.168.0.0/24
      VpnConnectionId: !Ref rVpnConn